import scipy.stats as stats

x_bar_n = 6.2
x_bar_y = 6
sigma_hat_1_sq = 0.1
sigma_hat_2_sq = 0.2
n = 50
m = 50

# Calculate the test statistic
test_statistic = (x_bar_n - x_bar_y) / ((sigma_hat_1_sq / n + sigma_hat_2_sq / m) ** 0.5)

# Calculate the degrees of freedom using Welch-Satterthwaite formula
degrees_of_freedom = (sigma_hat_1_sq / n + sigma_hat_2_sq / m) ** 2 / (
        (sigma_hat_1_sq ** 2 / ((n - 1) * n ** 2)) + (sigma_hat_2_sq ** 2 / ((m - 1) * m ** 2))
)

# Calculate the p-value
p_value = 2 * (1 - stats.t.cdf(abs(test_statistic), df=degrees_of_freedom))

print("Test Statistic (T_n):", test_statistic)
print("Degrees of Freedom:", degrees_of_freedom)
print("P-value:", p_value)
